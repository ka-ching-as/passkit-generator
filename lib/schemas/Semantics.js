"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Semantics = void 0;
const Joi = require("joi");
const CurrencyAmount = Joi.object().keys({
    currencyCode: Joi.string(),
    amount: Joi.string(),
});
const PersonNameComponent = Joi.object().keys({
    givenName: Joi.string(),
    familyName: Joi.string(),
    middleName: Joi.string(),
    namePrefix: Joi.string(),
    nameSuffix: Joi.string(),
    nickname: Joi.string(),
    phoneticRepresentation: Joi.string(),
});
const seat = Joi.object().keys({
    seatSection: Joi.string(),
    seatRow: Joi.string(),
    seatNumber: Joi.string(),
    seatIdentifier: Joi.string(),
    seatType: Joi.string(),
    seatDescription: Joi.string(),
});
const location = Joi.object().keys({
    latitude: Joi.number().required(),
    longitude: Joi.number().required(),
});
const WifiNetwork = Joi.object().keys({
    password: Joi.string().required(),
    ssid: Joi.string().required(),
});
exports.Semantics = Joi.object().keys({
    airlineCode: Joi.string(),
    artistIDs: Joi.array().items(Joi.string()),
    awayTeamAbbreviation: Joi.string(),
    awayTeamLocation: Joi.string(),
    awayTeamName: Joi.string(),
    balance: CurrencyAmount,
    boardingGroup: Joi.string(),
    boardingSequenceNumber: Joi.string(),
    carNumber: Joi.string(),
    confirmationNumber: Joi.string(),
    currentArrivalDate: Joi.string(),
    currentBoardingDate: Joi.string(),
    currentDepartureDate: Joi.string(),
    departureAirportCode: Joi.string(),
    departureAirportName: Joi.string(),
    departureGate: Joi.string(),
    departureLocation: location,
    departureLocationDescription: Joi.string(),
    departurePlatform: Joi.string(),
    departureStationName: Joi.string(),
    departureTerminal: Joi.string(),
    destinationAirportCode: Joi.string(),
    destinationAirportName: Joi.string(),
    destinationGate: Joi.string(),
    destinationLocation: location,
    destinationLocationDescription: Joi.string(),
    destinationPlatform: Joi.string(),
    destinationStationName: Joi.string(),
    destinationTerminal: Joi.string(),
    duration: Joi.number(),
    eventEndDate: Joi.string(),
    eventName: Joi.string(),
    eventStartDate: Joi.string(),
    eventType: Joi.string().regex(/(PKEventTypeGeneric|PKEventTypeLivePerformance|PKEventTypeMovie|PKEventTypeSports|PKEventTypeConference|PKEventTypeConvention|PKEventTypeWorkshop|PKEventTypeSocialGathering)/),
    flightCode: Joi.string(),
    flightNumber: Joi.number(),
    genre: Joi.string(),
    homeTeamAbbreviation: Joi.string(),
    homeTeamLocation: Joi.string(),
    homeTeamName: Joi.string(),
    leagueAbbreviation: Joi.string(),
    leagueName: Joi.string(),
    membershipProgramName: Joi.string(),
    membershipProgramNumber: Joi.string(),
    originalArrivalDate: Joi.string(),
    originalBoardingDate: Joi.string(),
    originalDepartureDate: Joi.string(),
    passengerName: PersonNameComponent,
    performerNames: Joi.array().items(Joi.string()),
    priorityStatus: Joi.string(),
    seats: Joi.array().items(seat),
    securityScreening: Joi.string(),
    silenceRequested: Joi.boolean(),
    sportName: Joi.string(),
    totalPrice: CurrencyAmount,
    transitProvider: Joi.string(),
    transitStatus: Joi.string(),
    transitStatusReason: Joi.string(),
    vehicleName: Joi.string(),
    vehicleNumber: Joi.string(),
    vehicleType: Joi.string(),
    venueEntrance: Joi.string(),
    venueLocation: location,
    venueName: Joi.string(),
    venuePhoneNumber: Joi.string(),
    venueRoom: Joi.string(),
    wifiAccess: Joi.array().items(WifiNetwork),
});
//# sourceMappingURL=Semantics.js.map